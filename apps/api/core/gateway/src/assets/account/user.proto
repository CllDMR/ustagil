syntax = "proto3";

package account_user;

service AccountUserService {
  rpc ListAccountUsers(ListAccountUsersRequest) 
  returns (ListAccountUsersResponse) {}
  
  rpc GetAccountUser(GetAccountUserRequest) 
  returns (AccountUser) {}
  
  rpc GetAccountUserByEmail(GetAccountUserByEmailRequest) 
  returns (AccountUser) {}
  
  rpc CreateAccountUser(CreateAccountUserRequest) 
  returns (AccountUser) {}
  
  rpc UpdateAccountUser(UpdateAccountUserRequest) 
  returns (AccountUser) {}
  
  rpc DeleteAccountUser(DeleteAccountUserRequest) 
  returns (AccountUser) {}
}

enum Role {
  ROLE_UNSPECIFIED = 0;
  ROLE_ORGANIZATION = 1;
  ROLE_BASE = 2;
  ROLE_SUPER_ADMIN = 3;
  ROLE_USER = 4;
}

enum AccountKind {
  ACCOUNT_KIND_BASE = 0;
  ACCOUNT_KIND_ORGANIZATION = 1;
  ACCOUNT_KIND_SUPER_ADMIN = 2;
  ACCOUNT_KIND_USER = 3;
}

message AccountUser {
  string id = 1;
  AccountKind kind = 2;
  Role role = 3;
  string displayName = 4;
  string email = 5;
  optional string password = 6;
}

message ListAccountUsersRequest {
  optional int32 page_size = 1;
  optional string next_page_cursor = 2;
}

message ListAccountUsersResponse {
  repeated AccountUser users = 1;
  string next_page_cursor = 2;
}

message GetAccountUserRequest {
  string id = 1;
}

message GetAccountUserByEmailRequest {
  string email = 1;
}

message CreateAccountUserRequest {
  string id = 1;
  string displayName = 2;
  string email = 3;
  string password = 4;
}

message UpdateAccountUserRequest {
  string id = 1;
  optional string displayName = 2;
  optional string email = 3;
}

message DeleteAccountUserRequest {
  string id = 1;
}
